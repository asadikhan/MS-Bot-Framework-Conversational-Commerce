<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AnythingElse" xml:space="preserve">
    <value>Is there anything else I can help you with?</value>
  </data>
  <data name="CancelConfirm" xml:space="preserve">
    <value>This order can be cancelled. Would you like to cancel it?</value>
  </data>
  <data name="CancelFailed" xml:space="preserve">
    <value>I am sorry but something went wrong. I am unable to cancel order {0}. Please contact our customer service. </value>
  </data>
  <data name="CancelNotAllowed" xml:space="preserve">
    <value>I am sorry but looks like this order has already been shipped. You may still be able to return it once received, but we can no longer cancel it. </value>
  </data>
  <data name="CancelNotConfirm" xml:space="preserve">
    <value>Ok I won't cancel order {0}. Is there anything else I can help you with?</value>
  </data>
  <data name="CancelOrder" xml:space="preserve">
    <value>I can see if it is not too late to cancel your order. What is your order number?</value>
  </data>
  <data name="CancelSuccessful" xml:space="preserve">
    <value>Order {0} has been cancelled. Please check your email for confirmation. Is there anything else I can help you with?</value>
  </data>
  <data name="Goodbye" xml:space="preserve">
    <value>Thank you. Good bye. </value>
  </data>
  <data name="Greeting" xml:space="preserve">
    <value>Hello! I can help you check your order status, track your order, cancel or return your order. What would you like to do?</value>
  </data>
  <data name="Inconclusive" xml:space="preserve">
    <value>I am sorry but I did not understand that. Can you please rephrase?</value>
  </data>
  <data name="OrderStatus" xml:space="preserve">
    <value>I can help find the status of your order. What is your order number?</value>
  </data>
  <data name="OrderStatusConfirm" xml:space="preserve">
    <value>The current status of your order is {0}. Is there anything else I can help you with?</value>
  </data>
  <data name="ReturnConfirm" xml:space="preserve">
    <value>This order can be returned. Would you like to return it?</value>
  </data>
  <data name="ReturnFailed" xml:space="preserve">
    <value>I am sorry but something went wrong. I am unable to return order {0}. Please contact our customer service.</value>
  </data>
  <data name="ReturnNotAllowed" xml:space="preserve">
    <value>I am sorry but looks like this order does not meet our return policy. We will not be able to return it. You can try calling our customer service at 1-888-xxx-yyyy for more information. </value>
  </data>
  <data name="ReturnNotConfirm" xml:space="preserve">
    <value>Ok I won't return order {0}. Is there anything else I can help you with?</value>
  </data>
  <data name="ReturnOrder" xml:space="preserve">
    <value>I am sorry to hear that our products were not to your expectations. Let me see if you can return it. What is the order number?</value>
  </data>
  <data name="ReturnSuccessful" xml:space="preserve">
    <value>Order {0} has been marked as pending return. Please check your email for further details on how to send it back. Is there anything else I can help you with?</value>
  </data>
  <data name="TrackOrder" xml:space="preserve">
    <value>I can help track your order. What is your order number?</value>
  </data>
  <data name="TrackOrderConfirm" xml:space="preserve">
    <value>You can track your order using this tracking number: {0}. Is there anything else I can help you with?</value>
  </data>
</root>